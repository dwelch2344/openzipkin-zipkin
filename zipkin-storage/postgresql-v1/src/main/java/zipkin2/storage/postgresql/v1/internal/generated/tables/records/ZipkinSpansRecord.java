/*
 * This file is generated by jOOQ.
 */
package zipkin2.storage.postgresql.v1.internal.generated.tables.records;


import org.jooq.Field;
import org.jooq.Record3;
import org.jooq.Record9;
import org.jooq.Row9;
import org.jooq.impl.UpdatableRecordImpl;

import zipkin2.storage.postgresql.v1.internal.generated.tables.ZipkinSpans;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class ZipkinSpansRecord extends UpdatableRecordImpl<ZipkinSpansRecord> implements Record9<Long, Long, Long, String, String, Long, Boolean, Long, Long> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>public.zipkin_spans.trace_id_high</code>. If non zero, this means the trace uses 128 bit traceIds instead of 64 bit
     */
    public void setTraceIdHigh(Long value) {
        set(0, value);
    }

    /**
     * Getter for <code>public.zipkin_spans.trace_id_high</code>. If non zero, this means the trace uses 128 bit traceIds instead of 64 bit
     */
    public Long getTraceIdHigh() {
        return (Long) get(0);
    }

    /**
     * Setter for <code>public.zipkin_spans.trace_id</code>.
     */
    public void setTraceId(Long value) {
        set(1, value);
    }

    /**
     * Getter for <code>public.zipkin_spans.trace_id</code>.
     */
    public Long getTraceId() {
        return (Long) get(1);
    }

    /**
     * Setter for <code>public.zipkin_spans.id</code>.
     */
    public void setId(Long value) {
        set(2, value);
    }

    /**
     * Getter for <code>public.zipkin_spans.id</code>.
     */
    public Long getId() {
        return (Long) get(2);
    }

    /**
     * Setter for <code>public.zipkin_spans.name</code>.
     */
    public void setName(String value) {
        set(3, value);
    }

    /**
     * Getter for <code>public.zipkin_spans.name</code>.
     */
    public String getName() {
        return (String) get(3);
    }

    /**
     * Setter for <code>public.zipkin_spans.remote_service_name</code>.
     */
    public void setRemoteServiceName(String value) {
        set(4, value);
    }

    /**
     * Getter for <code>public.zipkin_spans.remote_service_name</code>.
     */
    public String getRemoteServiceName() {
        return (String) get(4);
    }

    /**
     * Setter for <code>public.zipkin_spans.parent_id</code>.
     */
    public void setParentId(Long value) {
        set(5, value);
    }

    /**
     * Getter for <code>public.zipkin_spans.parent_id</code>.
     */
    public Long getParentId() {
        return (Long) get(5);
    }

    /**
     * Setter for <code>public.zipkin_spans.debug</code>.
     */
    public void setDebug(Boolean value) {
        set(6, value);
    }

    /**
     * Getter for <code>public.zipkin_spans.debug</code>.
     */
    public Boolean getDebug() {
        return (Boolean) get(6);
    }

    /**
     * Setter for <code>public.zipkin_spans.start_ts</code>. Span.timestamp(): epoch micros used for endTs query and to implement TTL
     */
    public void setStartTs(Long value) {
        set(7, value);
    }

    /**
     * Getter for <code>public.zipkin_spans.start_ts</code>. Span.timestamp(): epoch micros used for endTs query and to implement TTL
     */
    public Long getStartTs() {
        return (Long) get(7);
    }

    /**
     * Setter for <code>public.zipkin_spans.duration</code>. Span.duration(): micros used for minDuration and maxDuration query
     */
    public void setDuration(Long value) {
        set(8, value);
    }

    /**
     * Getter for <code>public.zipkin_spans.duration</code>. Span.duration(): micros used for minDuration and maxDuration query
     */
    public Long getDuration() {
        return (Long) get(8);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record3<Long, Long, Long> key() {
        return (Record3) super.key();
    }

    // -------------------------------------------------------------------------
    // Record9 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row9<Long, Long, Long, String, String, Long, Boolean, Long, Long> fieldsRow() {
        return (Row9) super.fieldsRow();
    }

    @Override
    public Row9<Long, Long, Long, String, String, Long, Boolean, Long, Long> valuesRow() {
        return (Row9) super.valuesRow();
    }

    @Override
    public Field<Long> field1() {
        return ZipkinSpans.ZIPKIN_SPANS.TRACE_ID_HIGH;
    }

    @Override
    public Field<Long> field2() {
        return ZipkinSpans.ZIPKIN_SPANS.TRACE_ID;
    }

    @Override
    public Field<Long> field3() {
        return ZipkinSpans.ZIPKIN_SPANS.ID;
    }

    @Override
    public Field<String> field4() {
        return ZipkinSpans.ZIPKIN_SPANS.NAME;
    }

    @Override
    public Field<String> field5() {
        return ZipkinSpans.ZIPKIN_SPANS.REMOTE_SERVICE_NAME;
    }

    @Override
    public Field<Long> field6() {
        return ZipkinSpans.ZIPKIN_SPANS.PARENT_ID;
    }

    @Override
    public Field<Boolean> field7() {
        return ZipkinSpans.ZIPKIN_SPANS.DEBUG;
    }

    @Override
    public Field<Long> field8() {
        return ZipkinSpans.ZIPKIN_SPANS.START_TS;
    }

    @Override
    public Field<Long> field9() {
        return ZipkinSpans.ZIPKIN_SPANS.DURATION;
    }

    @Override
    public Long component1() {
        return getTraceIdHigh();
    }

    @Override
    public Long component2() {
        return getTraceId();
    }

    @Override
    public Long component3() {
        return getId();
    }

    @Override
    public String component4() {
        return getName();
    }

    @Override
    public String component5() {
        return getRemoteServiceName();
    }

    @Override
    public Long component6() {
        return getParentId();
    }

    @Override
    public Boolean component7() {
        return getDebug();
    }

    @Override
    public Long component8() {
        return getStartTs();
    }

    @Override
    public Long component9() {
        return getDuration();
    }

    @Override
    public Long value1() {
        return getTraceIdHigh();
    }

    @Override
    public Long value2() {
        return getTraceId();
    }

    @Override
    public Long value3() {
        return getId();
    }

    @Override
    public String value4() {
        return getName();
    }

    @Override
    public String value5() {
        return getRemoteServiceName();
    }

    @Override
    public Long value6() {
        return getParentId();
    }

    @Override
    public Boolean value7() {
        return getDebug();
    }

    @Override
    public Long value8() {
        return getStartTs();
    }

    @Override
    public Long value9() {
        return getDuration();
    }

    @Override
    public ZipkinSpansRecord value1(Long value) {
        setTraceIdHigh(value);
        return this;
    }

    @Override
    public ZipkinSpansRecord value2(Long value) {
        setTraceId(value);
        return this;
    }

    @Override
    public ZipkinSpansRecord value3(Long value) {
        setId(value);
        return this;
    }

    @Override
    public ZipkinSpansRecord value4(String value) {
        setName(value);
        return this;
    }

    @Override
    public ZipkinSpansRecord value5(String value) {
        setRemoteServiceName(value);
        return this;
    }

    @Override
    public ZipkinSpansRecord value6(Long value) {
        setParentId(value);
        return this;
    }

    @Override
    public ZipkinSpansRecord value7(Boolean value) {
        setDebug(value);
        return this;
    }

    @Override
    public ZipkinSpansRecord value8(Long value) {
        setStartTs(value);
        return this;
    }

    @Override
    public ZipkinSpansRecord value9(Long value) {
        setDuration(value);
        return this;
    }

    @Override
    public ZipkinSpansRecord values(Long value1, Long value2, Long value3, String value4, String value5, Long value6, Boolean value7, Long value8, Long value9) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        value6(value6);
        value7(value7);
        value8(value8);
        value9(value9);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached ZipkinSpansRecord
     */
    public ZipkinSpansRecord() {
        super(ZipkinSpans.ZIPKIN_SPANS);
    }

    /**
     * Create a detached, initialised ZipkinSpansRecord
     */
    public ZipkinSpansRecord(Long traceIdHigh, Long traceId, Long id, String name, String remoteServiceName, Long parentId, Boolean debug, Long startTs, Long duration) {
        super(ZipkinSpans.ZIPKIN_SPANS);

        setTraceIdHigh(traceIdHigh);
        setTraceId(traceId);
        setId(id);
        setName(name);
        setRemoteServiceName(remoteServiceName);
        setParentId(parentId);
        setDebug(debug);
        setStartTs(startTs);
        setDuration(duration);
    }
}
